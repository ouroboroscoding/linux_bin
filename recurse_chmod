#!/usr/bin/python
# coding=utf8
##
# Recurse chmod
#
# Used to recursively change the mode on all directories and files in a path
#
# @author Chris Nasr
# @copyright FUEL for the FIRE
# @created 2015-03-14

# Import python core modules
import os
from getopt import getopt
import re
import sys

# Global variables
giFileMode	= 0664
giDirMode	= 0775
gbVerbose	= False

# Look for arguments
dOpts, lArgs	= getopt(sys.argv[1:], 'v', ['filemode=','dirmode=','verbose'])
dOpts	= dict(dOpts)

# If verbose mode is set
if '-v' in dOpts or '--verbose' in dOpts:
	gbVerbose	= True

# If the file mode argument is set
if '--filemode' in dOpts:

	# Get the length
	iLen	= len(dOpts['--filemode'])

	# If it's an valid octal value
	if re.search('0?[0-7]{3}', dOpts['--filemode']) == None:
		print 'Invalid value for file mode (--filemode): ' + dOpts['--filemode']
		exit(1)

	# Store the value
	giFileMode	= int(dOpts['--filemode'], 8)

# If the dir mode argument is set
if '--dirmode' in dOpts:

	# Get the length
	iLen	= len(dOpts['--dirmode'])

	# If it's an valid octal value
	if re.search('0?[0-7]{3}', dOpts['--dirmode']) == None:
		print 'Invalid value for file mode (--dirmode): ' + dOpts['--dirmode']
		exit(1)

	# Store the value
	giDirMode	= int(dOpts['--dirmode'], 8)

# Walk through the files and folders in the current working directory
for path,dirs,files in os.walk('.'):

	# Go through each file
	for i in xrange(0, len(files)):

		# Change the mode
		if gbVerbose: print 'chmod', oct(giFileMode), path + '/' + files[i]
		os.chmod(path + '/' + files[i], giFileMode)

	# Go through each directory
	for i in xrange(0, len(dirs)):

		# Change the mode
		if gbVerbose: print 'chmod', oct(giDirMode), path + '/' + dirs[i]
		os.chmod(path + '/' + dirs[i], giDirMode)

